exports = async function(changeEvent) {
    // Source document _id
    const docId = changeEvent.fullDocument._id;
    // Get counter and source collection instances
    const counterCollection = context.services.get("<ATLAS-SERVICE>").db(changeEvent.ns.db).collection("counters");
    const targetCollection = context.services.get("<ATLAS-SERVICE>").db(changeEvent.ns.db).collection(changeEvent.ns.coll);
    // automically increment and retrieve a sequence relevant to the current namespace (db.collection)
    const counter = await counterCollection.findOneAndUpdate({_id: changeEvent.ns },{ $inc: { seq_value: 1 }}, { returnNewDocument: true, upsert : true});
    // Set a generic field <COLLECTION_NAME>Id 
    const doc = {};
    doc[`${changeEvent.ns.coll}Id`] = counter.seq_value;
    const updateRes = await targetCollection.updateOne({_id: docId},{ $set: doc});
    console.log(`Updated ${JSON.stringify(changeEvent.ns)} with counter ${counter.seq_value} result: ${JSON.stringify(updateRes)}`);
};